:PROPERTIES:
:ID:       555129b5-299e-4605-a2cd-9f77ebcede3d
:LAST_MODIFIED: [2024-01-17 Wed 06:47]
:ROAM_ALIASES: "Shortest path problem"
:END:
#+title: Shortest path algorithm
#+hugo_custom_front_matter: :slug "555129b5-299e-4605-a2cd-9f77ebcede3d"
#+author: Cash Prokop-Weaver
#+date: [2022-12-21 Wed 06:03]
#+filetags: :concept:

#+begin_quote
In graph theory [[[id:5bc61709-6612-4287-921f-3e2509bd2261][Graph theory]]], the shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.
#+end_quote

* Algorithms

- [[id:9d301c65-05c3-44f8-9660-90e0e963e6aa][Single-source shortest path problem]]
  - Non-negative weights: [[id:668cbbcc-170b-42c8-b92b-75f6868a0138][Dijkstra's algorithm]], [[id:4d3cbeb6-ea82-4e4f-96bb-3e950ebc2087][A*]]
  - Negative weights: [[id:2fe284fb-7fbc-4956-9857-db90b66e504e][Bellman-Ford algorithm]]
- [[id:477fb65f-3351-4154-a270-08c58cdcaf88][Single-pair shortest path problem]]
  - Non-negative weights: [[id:668cbbcc-170b-42c8-b92b-75f6868a0138][Dijkstra's algorithm]]
  - Negative weights: [[id:2fe284fb-7fbc-4956-9857-db90b66e504e][Bellman-Ford algorithm]]
- [[id:cd02a339-815c-4ada-b9f9-f0008db4684a][All-pairs shortest path problem]]
  - [[id:d0a89ea1-4add-495b-8df4-1f27e9de71c6][Floyd-Warshall algorithm]]

* Flashcards :noexport:
** Definition :fc:
:PROPERTIES:
:CREATED: [2022-12-21 Wed 19:38]
:FC_CREATED: 2022-12-22T03:41:34Z
:FC_TYPE:  double
:ID:       5826393f-7530-4f27-bbaa-d2d4cc4f9218
:END:
:REVIEW_DATA:
| position | ease | box | interval | due                  |
|----------+------+-----+----------+----------------------|
| front    | 2.80 |   7 |   376.17 | 2024-08-30T03:38:15Z |
| back     | 2.50 |   7 |   345.65 | 2024-07-22T14:09:40Z |
:END:

Optimal path between two [[id:1b2526af-676d-4c0f-aa85-1ba05b8e7a93][Vertices]] in a [[id:8bff4dfc-8073-4d45-ab89-7b3f97323327][Graph]]

*** Back
A path $p$ between two [[id:1b2526af-676d-4c0f-aa85-1ba05b8e7a93][Vertices]] such that $\operatorname{cost}(p) \leq \operatorname{cost}(p^\prime) \;\forall\; p^\prime \;\text{in}\; P$.
*** Source
** Describe :fc:
:PROPERTIES:
:CREATED: [2022-12-22 Thu 10:41]
:FC_CREATED: 2022-12-22T18:41:59Z
:FC_TYPE:  double
:ID:       cf057ee2-4234-4b3d-a520-2eabba7bd72c
:END:
:REVIEW_DATA:
| position | ease | box | interval | due                  |
|----------+------+-----+----------+----------------------|
| front    | 2.80 |   7 |   330.71 | 2024-05-18T18:13:12Z |
| back     | 2.80 |   7 |   300.48 | 2024-04-20T01:02:00Z |
:END:

[[id:92976e2e-a367-4517-a287-1b4a95db9592][Negative cycle]] in the context of [[id:555129b5-299e-4605-a2cd-9f77ebcede3d][Shortest path problem]]

*** Back
[[id:92976e2e-a367-4517-a287-1b4a95db9592][Negative cycles]] allow for infinitely small distances between nodes and make it impossible to find the cheapest path between points which can reach the cycle.
*** Source
[cite:@ShortestPathProblem2022]
** Cloze :fc:
:PROPERTIES:
:CREATED: [2022-12-22 Thu 11:30]
:FC_CREATED: 2022-12-22T19:31:11Z
:FC_TYPE:  cloze
:ID:       7aec46d8-cf66-434a-a947-959a4527ab0c
:FC_CLOZE_MAX: 1
:FC_CLOZE_TYPE: deletion
:END:
:REVIEW_DATA:
| position | ease | box | interval | due                  |
|----------+------+-----+----------+----------------------|
|        0 | 2.50 |   8 |   624.92 | 2025-10-03T12:57:47Z |
|        1 | 2.65 |   7 |   402.72 | 2024-10-02T08:14:10Z |
:END:

{{[[id:668cbbcc-170b-42c8-b92b-75f6868a0138][Dijkstra's algorithm]]}{single algorithm}@0} solves the [[id:477fb65f-3351-4154-a270-08c58cdcaf88][Single-pair shortest path problem]] for [[id:8bff4dfc-8073-4d45-ab89-7b3f97323327][Graphs]] {{without}@1} negative weights.

*** Source
[cite:@DijkstraAlgorithm2022]
** Cloze :fc:
:PROPERTIES:
:CREATED: [2022-12-22 Thu 11:31]
:FC_CREATED: 2022-12-22T19:32:00Z
:FC_TYPE:  cloze
:ID:       e3260038-a2d9-41b2-904a-35fe3f3278a9
:FC_CLOZE_MAX: 1
:FC_CLOZE_TYPE: deletion
:END:
:REVIEW_DATA:
| position | ease | box | interval | due                  |
|----------+------+-----+----------+----------------------|
|        0 | 2.65 |   7 |   372.44 | 2024-09-01T01:51:12Z |
|        1 | 2.65 |   7 |   262.45 | 2024-03-12T01:00:37Z |
:END:

{{[[id:2fe284fb-7fbc-4956-9857-db90b66e504e][Bellman-Ford algorithm]]}@0} solves the [[id:477fb65f-3351-4154-a270-08c58cdcaf88][Single-pair shortest path problem]] for [[id:8bff4dfc-8073-4d45-ab89-7b3f97323327][Graphs]] {{with}{with/without}@1} negative weights

*** Source
[cite:@BellmanFordAlgorithm2022]
* Bibliography
#+print_bibliography:
